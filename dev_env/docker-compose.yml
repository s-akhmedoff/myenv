version: '3.9'

services:
  jaeger:
    container_name: jaeger
    restart: always
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    volumes:
      - jaeger_volume:/tmp
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090  
    networks:
      - default

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_volume:/data
    ports:
      - 9000:9000

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://db_admin:admin@postgresql:5432/postgres?sslmode=disable
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_volume:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090
    networks:
      - default 
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    ports:
      - 9100:9100
    networks:
      - default
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_volume:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - grafana.env
    restart: always
    ports:
      - 3000:3000
    networks:
      - default
  
  postgres:
    container_name: postgresql
    image: postgres:alpine
    restart: always
    env_file:
      - postgres.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      - default

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    env_file: 
      - pgadmin.env
    volumes: 
      - pgadmin_volume:/var/lib/pgadmin
    ports:
      - 5050:80
    networks: 
      - default

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    hostname: dev
    env_file: 
      - rabbitmq.env
    volumes: 
      - rabbitmq_volume:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - default

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    env_file:
      - redis.env
    volumes:
      - redis_volume:/var/lib/redis
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - default

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: always
    ports:
      - 8081:8080
    networks:
      - default 

volumes:
  jaeger_volume:
  portainer_volume:
  prometheus_volume:
  grafana_volume:
  postgres_volume:
  pgadmin_volume:
  rabbitmq_volume:
  redis_volume:
  redis_data:

networks:
  default:
    name: dev_env
   